% 1.4 Let L be a numerical list and consider the following PROLOG definition 
% for the predicate f(list, list) with the flow model (i, o). 
f([], []).
f([H|T], [H|S]):-
		f(T, S).
f([H|T], S):-
		H mod 2 =:= 0,
		f(T, S).
% Give the result of the following goal: f([1,2,3],L). Justify the answer.

% f([1, 2, 3], _)
% -> f([2, 3], _)
% -> f([3], _)
% -> f([], [])
% <- f([3], [3])
% <- f([2, 3], [2, 3])
% <- f([1, 2, 3], [1, 2, 3])

% 1 solution found, goes to backtrack for first f(T, S).
% <- f([3], _)
% <- f([2, 3], S_)
% -> f([3], S_)
% -> f([], S_)
% <- f([], [])
% <- f([3], [3])
% <- f([2, 3], [3])
% <- f([1, 2, 3], [1, 3])

% another solution found, goes to backtrack for second f(T, S).
% <- f([3], _)
% <- f([2, 3], _)
% <- f([1, 2, 3], _)
% backtracking stops

% the math model of the function f
% f(l1l2...ln) = {} if n = 0,
%              = f(l2...ln) if l1 is even,
%              {l1} U f(l2...ln)

% f([1, 2, 3]) 
% -> [1] U f([2, 3]) -> 
		% f([3]) -> [3] U f([3]) -> [3]
		% comes back with [3] and append it to [1] => [1, 3]
% -> [1] U [2] U f([3]) -> [1] U [2] U [3] U f([]) -> [1, 2, 3]