; 1.1 Consider the following function definition in LISP:
(DEFUN F(L1 L2) 
        (APPEND (F (CAR L1) L2) 
             (COND 
              ((NULL L1) (CDR L2)) 
              (T (LIST (F (CAR L1) L2) (CAR L2)))
             )
        )
)
; Give a solution to avoid the double recursive call (F (CAR L1) L2). 
; You will not use SET, SETQ SETF. Justify the answer.

(DEFUN F(L1 L2)
       (LAMBDA (X) (APPEND X (COND
                              ((NULL L1) (CDR L2))
                              (T (LIST X (CAR L2)))
                             )
                   ) (F (CAR L1) L2)
       )
)