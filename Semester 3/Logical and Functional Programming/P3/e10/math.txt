getLengthOfSet(l1l2...ln) = 0 if n = 0,
                          = 1 + getLengthOfSet(l2...ln) otherwise.

getSumOfSet(l1l2...ln) = 0 if n = 0,
                       = l1 + getSumOfSet(l2...ln) otherwise.

getAllSubsetsOfSet(l1...ln) = [], n = 0
                            = l1 + subsets(l2...ln), n > 0
                            = subsets(l2...ln)

checkCondition(l1l2...ln, N) = true if getSumOfSet(l1l2...ln) % N = 0,
                             = false otherwise.

solve(l1l2...ln, N) uses checkCondition(s1s2...sm, N) for each s1s2...sm(set) generated by
    getAllSubsetsOfSet predicate and returns the sets that check the condition

findSubsetsWithSumDivisibleBySetLength(l1l2...ln) gets the length n of the set l1l2...ln and
    returns all the subsets divisible by n, determined by the predicate solve
