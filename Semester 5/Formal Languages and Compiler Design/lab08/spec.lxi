%{
#include <stdio.h>
int currentLine = 1;
%}

%option noyywrap

BOOL_CONST 	true|false
INT_CONST 	0|[+|-]?[1-9][0-9]*
CHAR_CONST 	[\'][a-zA-Z0-9][\']
STRING_CONST 	[\"][a-zA-Z0-9 ]*[\"]
IDENTIFIER 	[a-zA-Z_][a-zA-Z0-9_]*

%%

"array"|"bool"|"string"|"int"|"char"|"elif"|"if"|"return" 	{printf("Line %d - reserved word: %s\n", currentLine, yytext);}
"else"|"do"|"end"|"gets"|"puts"|"cuts"|"to_i"|"while" 		{printf("Line %d - reserved word: %s\n", currentLine, yytext);}
"start"|"stop"|"nil"|"and"|"break"|"or"|"for"|"in" 		{printf("Line %d - reserved word: %s\n", currentLine, yytext);}

"+"|"-"|"*"|"/"|"%"|"<"|"<="|"=="|"!="|">="|">"|"=" 	{printf("Line %d - operator: %s\n", currentLine, yytext);}
"["|"]"|"{"|"}"|"("|")"|","|":"|";"|"'"|"\"" 		{printf("Line %d - separator: %s\n", currentLine, yytext);}

{BOOL_CONST} 	{printf("Line %d - boolean constant: %s\n", currentLine, yytext);}
{INT_CONST} 	{printf("Line %d - integer constant: %s\n", currentLine, yytext);}
{CHAR_CONST} 	{printf("Line %d - character constant: %s\n", currentLine, yytext);}
{STRING_CONST} 	{printf("Line %d - string constant: %s\n", currentLine, yytext);}
{IDENTIFIER} 	{printf("Line %d - identifier: %s\n", currentLine, yytext);}

[ \t]+ 	{/* Ignore whitespaces */}
[\n]+ 	{currentLine++;}

[0-9][a-zA-Z0-9_]* 					{printf("@ Line %d - illegal identifier: %s @\n", currentLine, yytext);}
[+|-]0|[+|-]?0[0-9]+ 					{printf("@ Line %d - illegal integer constant: %s @\n", currentLine, yytext);}
[\'][a-zA-Z0-9 ]{2}[\']|[\'][a-zA-Z0-9 ]{2,}[\'] 	{printf("@ Line %d - illegal character constant: %s @\n", currentLine, yytext);}
[\"][a-zA-Z0-9_]+|[a-zA-Z0-9_]+[\"] 			{printf("@ Line %d - illegal string constant: %s @\n", currentLine, yytext);}
. 							{printf("@ Line %d - unrecognized token: %s @\n", currentLine, yytext);}

%%

void main(argc, argv)
int argc;
char** argv;
{           
    if (argc > 1)
    {
        FILE *file;
        file = fopen(argv[1], "r");
        if (!file)
        {
            fprintf(stderr, "Could not open %s\n", argv[1]);
            exit(1);
        }
        yyin = file;
    }

    yylex();
}