<program> ::= start <statement_list> stop
<statement> ::= <declaration>|<assignment_statement>|<if_statement>|<while_statement>|<return_statement>|<for_statement>|<iostmt>|<inputmodstmt>

<statement_list> ::= <statement>;|<statement>; <statement_list>
<compound_statement> ::= do <statement_list> end

<expression> ::= <expression>+<term>|<expression>-<term>|<term>
<term> ::= <term>*<factor>|<term>/<factor>|<factor>
<factor> ::= (<expression>)|identifier|const

<iostmt> ::= gets()|puts(<identifier>)|puts(<const>)
<inputmodstmt> ::= cuts(<identifier>)|cuts(<string_constant>)|to_i(<identifier>)|to_i(<string_constant>)

<simple_type> ::= int|string|char|bool|array
<array_access> ::= <identifier>[<expression>]
<declaration> ::= <simple_type> <identifier>

<relation> ::= <|<=|==|!=|>=|>
<condition> ::= <expression><relation><expression>

<assignment_statement> ::= <identifier> = <expression>|<list_access> = <expression>
<if_statement> ::= if <condition> <statement> elif <condition> <statement> else <statement> end|if <condition> <statement> else <statement> end|if <condition> <statement> end
<while_statement> ::= while <condition> do <statement> end
<return_statement> ::= return <expression>
<for_statement> ::= for <identifier> in <expression> <compound_statement>
